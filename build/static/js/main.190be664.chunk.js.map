{"version":3,"sources":["components/TutorialHeader/index.js","components/TutorialHeader/TutorialHeader.js","components/Info/Info.js","content/LandingPage/LandingPage.js","content/LandingPage/index.js","content/RepoPage/RepoTable.js","content/RepoPage/RepoPage.js","content/RepoPage/index.js","App.js","serviceWorker.js","index.js"],"names":["TutorialHeader","react_default","a","createElement","UIShell","aria-label","element","Link","to","prefix","_20_default","user_avatar_20_default","app_switcher_20_default","InfoSection","props","className","concat","heading","children","InfoCard","splitHeading","phrase","splitPhrase","split","thirdWord","pop","join","createArrayFromPhrase","body","icon","selected","triggerHref","role","href","tabIndex","LandingPage","Breadcrumb","noTrailingSlash","BreadcrumbItem","Tabs","Object","assign","Tab","label","Button","src","process","alt","Info_InfoSection","Info_InfoCard","person_favorite_32_default","application_32_default","_32_default","RepoTable","_ref","rows","headers","getRowDescription","rowId","row","find","_ref2","id","description","DataTable","render","_ref3","getHeaderProps","getRowProps","getTableProps","TableContainer","title","Table","TableHead","TableRow","TableExpandHeader","map","header","TableHeader","TableBody","Fragment","key","TableExpandRow","cells","cell","TableCell","value","TableExpandedRow","colSpan","length","REPO_QUERY","gql","_templateObject","LinkList","url","homepageUrl","style","display","RepoPage","_useState","useState","_useState2","slicedToArray","totalItems","setTotalItems","_useState3","_useState4","firstRowIndex","setFirstRowIndex","_useState5","_useState6","currentPageSize","setCurrentPageSize","react_apollo_esm","query","loading","error","organization","data","DataTableSkeleton","columnCount","rowCount","message","repositories","totalCount","objectSpread","stars","stargazers","issueCount","issues","createdAt","Date","toLocaleDateString","updatedAt","links","RepoPage_LinkList","getRowItems","nodes","RepoPage_RepoTable","slice","Pagination","backwardText","forwardText","pageSize","pageSizes","itemsPerPageText","onChange","page","App","components_TutorialHeader","react_router","exact","path","component","Component","Boolean","window","location","hostname","match","client","ApolloClient","uri","authorization","REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN","ReactDOM","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.190be664.chunk.js","sourcesContent":["import TutorialHeader from './TutorialHeader';\nexport default TutorialHeader;\n","import React from 'react';\nimport {\n  Header,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuItem,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n} from 'carbon-components-react/lib/components/UIShell';\nimport Notification20 from '@carbon/icons-react/lib/notification/20';\nimport UserAvatar20 from '@carbon/icons-react/lib/user--avatar/20';\nimport AppSwitcher20 from '@carbon/icons-react/lib/app-switcher/20';\nimport { Link } from 'react-router-dom';\n\nconst TutorialHeader = () => (\n  <Header aria-label=\"Carbon Tutorial\">\n    <SkipToContent />\n    <HeaderName element={Link} to=\"/\" prefix=\"Fish of\">\n      Belarus\n    </HeaderName>\n    <HeaderNavigation aria-label=\"Carbon Tutorial\">\n      <HeaderMenuItem element={Link} to=\"/\">\n        Путеводитель рыбака по Беларуси\n      </HeaderMenuItem>\n    </HeaderNavigation>\n    <HeaderGlobalBar>\n      <HeaderGlobalAction aria-label=\"Notifications\">\n        <Notification20 />\n      </HeaderGlobalAction>\n      <HeaderGlobalAction aria-label=\"User Avatar\">\n        <UserAvatar20 />\n      </HeaderGlobalAction>\n      <HeaderGlobalAction aria-label=\"App Switcher\">\n        <AppSwitcher20 />\n      </HeaderGlobalAction>\n    </HeaderGlobalBar>\n  </Header>\n);\n\nexport default TutorialHeader;\n","import React from 'react';\n\n// Take in a phrase and separate the third word in an array\nfunction createArrayFromPhrase(phrase) {\n  const splitPhrase = phrase.split(' ');\n  const thirdWord = splitPhrase.pop();\n  return [splitPhrase.join(' '), thirdWord];\n}\n\nconst InfoSection = props => (\n  <section className={`bx--row ${props.className} info-section`}>\n    <div className=\"bx--col-md-8 bx--col-lg-4 bx--col-xlg-3\">\n      <h3 className=\"info-section__heading\">{props.heading}</h3>\n    </div>\n    {props.children}\n  </section>\n);\n\nconst InfoCard = props => {\n  const splitHeading = createArrayFromPhrase(props.heading);\n\n  return (\n    <div className=\"info-card bx--col-md-4 bx--col-lg-4 bx--col-xlg-3 bx--offset-xlg-1\">\n      <h4 className=\"info-card__heading\">\n        {`${splitHeading[0]} `}\n        <strong>{splitHeading[1]}</strong>\n      </h4>\n      <p className=\"info-card__body\">{props.body}</p>\n      {props.icon}\n    </div>\n  );\n};\n\nexport { InfoSection, InfoCard };\n","import React from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Tabs,\n  Tab,\n} from 'carbon-components-react';\nimport { InfoSection, InfoCard } from '../../components/Info';\nimport Globe32 from '@carbon/icons-react/lib/globe/32';\nimport PersonFavorite32 from '@carbon/icons-react/lib/person--favorite/32';\nimport Application32 from '@carbon/icons-react/lib/application/32';\n\nconst props = {\n  tabs: {\n    selected: 0,\n    triggerHref: '#',\n    role: 'navigation',\n  },\n  tab: {\n    href: '#',\n    role: 'presentation',\n    tabIndex: 0,\n  },\n};\n\nconst LandingPage = () => {\n  return (\n    <div className=\"bx--grid bx--grid--full-width landing-page\">\n      <div className=\"bx--row landing-page__banner\">\n        <div className=\"bx--col-lg-16\">\n          <Breadcrumb noTrailingSlash aria-label=\"Page navigation\">\n            <BreadcrumbItem>\n              <a href=\"/\">Путеводитель рыбака</a>\n            </BreadcrumbItem>\n          </Breadcrumb>\n          <h1 className=\"landing-page__heading\">\n            Рыбалка в Беларуси\n          </h1>\n        </div>\n      </div>\n      <div className=\"bx--row landing-page__r2\">\n        <div className=\"bx--col bx--no-gutter\">\n          <Tabs {...props.tabs} aria-label=\"Tab navigation\">\n            <Tab {...props.tab} label=\"Браславские озера\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-md-4 bx--col-lg-7\">\n                    <h2 className=\"landing-page__subheading\">\n                      Где порыбачить на Браславских озерах?\n                    </h2>\n                    <p className=\"landing-page__p\">\n                      <div>Рыбалка на озере Пагоща/Браславские озера.</div>\n\n                      Пагошча — возера ў Браслаўскім раёне Віцебскай вобласьці. Знаходзіцца за 12 км на паўднёвы ўсход ад Браслава каля вёскі Пагошча. Належыць да групы Браслаўскіх азёр.\n                    </p>\n                    <p className=\"landing-page__p\">\n                    Лучшая рыбалка в Браслав. Дом на берегу озера. Камин, печь, свой подход к воде.\n                    </p>\n                    <Button>Подробнее</Button>\n                  </div>\n                  <div className=\"bx--col-md-4 bx--col-lg-9\">\n                    <img\n                      className=\"landing-page__illo\"\n                      src={`${process.env.PUBLIC_URL}/home_banner.png`}\n                      alt=\"Carbon illustration\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </Tab>\n            <Tab {...props.tab} label=\"р. Березина\">\n              <div className=\"bx--grid bx--grid--no-gutter bx--grid--full-width\">\n                <div className=\"bx--row landing-page__tab-content\">\n                  <div className=\"bx--col-lg-16\">\n                    Rapidly build beautiful and accessible experiences. The\n                    Carbon kit contains all resources you need to get started.\n                  </div>\n                </div>\n              </div>\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n      <InfoSection heading=\"The Principles\" className=\"landing-page__r3\">\n        <InfoCard\n          heading=\"Carbon is Open\"\n          body=\"It's a distributed effort, guided by the principles of the open-source movement. Carbon's users are also it's makers, and everyone is encouraged to contribute.\"\n          icon={<PersonFavorite32 />}\n        />\n        <InfoCard\n          heading=\"Carbon is Modular\"\n          body=\"Carbon's modularity ensures maximum flexibility in execution. It's components are designed to work seamlessly with each other, in whichever combination suits the needs of the user.\"\n          icon={<Application32 />}\n        />\n        <InfoCard\n          heading=\"Carbon is Consistent\"\n          body=\"Based on the comprehensive IBM Design Language, every element and component of Carbon was designed from the ground up to work elegantly together to ensure consistent, cohesive user experiences.\"\n          icon={<Globe32 />}\n        />\n      </InfoSection>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import LandingPage from './LandingPage';\nexport default LandingPage;\n","import React from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableExpandHeader,\n  TableHeader,\n  TableBody,\n  TableExpandRow,\n  TableCell,\n  TableExpandedRow,\n} from 'carbon-components-react';\n\nconst RepoTable = ({ rows, headers }) => {\n  const getRowDescription = rowId => {\n    const row = rows.find(({ id }) => id === rowId);\n    return row ? row.description : '';\n  };\n\n  return (\n    <DataTable\n      rows={rows}\n      headers={headers}\n      render={({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getTableProps,\n      }) => (\n        <TableContainer\n          title=\"Carbon Repositories\"\n          description=\"A collection of public Carbon repositories.\">\n          <Table {...getTableProps()}>\n            <TableHead>\n              <TableRow>\n                <TableExpandHeader />\n                {headers.map(header => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <React.Fragment key={row.id}>\n                  <TableExpandRow {...getRowProps({ row })}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableExpandRow>\n                  <TableExpandedRow colSpan={headers.length + 1}>\n                    <p>{getRowDescription(row.id)}</p>\n                  </TableExpandedRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  );\n};\n\nexport default RepoTable;\n","import React, { useState } from 'react';\nimport RepoTable from './RepoTable';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\nimport { Link, DataTableSkeleton, Pagination } from 'carbon-components-react';\n\nconst REPO_QUERY = gql`\n  query REPO_QUERY {\n    # Let's use carbon as our organization\n    organization(login: \"carbon-design-system\") {\n      # We'll grab all the repositories in one go. To load more resources\n      # continuously, see the advanced topics.\n      repositories(first: 75, orderBy: { field: UPDATED_AT, direction: DESC }) {\n        totalCount\n        nodes {\n          url\n          homepageUrl\n          issues(filterBy: { states: OPEN }) {\n            totalCount\n          }\n          stargazers {\n            totalCount\n          }\n          releases(first: 1) {\n            totalCount\n            nodes {\n              name\n            }\n          }\n          name\n          updatedAt\n          createdAt\n          description\n          id\n        }\n      }\n    }\n  }\n`;\n\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'createdAt',\n    header: 'Created',\n  },\n  {\n    key: 'updatedAt',\n    header: 'Updated',\n  },\n  {\n    key: 'issueCount',\n    header: 'Open Issues',\n  },\n  {\n    key: 'stars',\n    header: 'Stars',\n  },\n  {\n    key: 'links',\n    header: 'Links',\n  },\n];\n\nconst LinkList = ({ url, homepageUrl }) => (\n  <ul style={{ display: 'flex' }}>\n    <li>\n      <Link href={url}>GitHub</Link>\n    </li>\n    {homepageUrl && (\n      <li>\n        <span>&nbsp;|&nbsp;</span>\n        <Link href={homepageUrl}>Homepage</Link>\n      </li>\n    )}\n  </ul>\n);\n\nconst getRowItems = rows =>\n  rows.map(row => ({\n    ...row,\n    key: row.id,\n    stars: row.stargazers.totalCount,\n    issueCount: row.issues.totalCount,\n    createdAt: new Date(row.createdAt).toLocaleDateString(),\n    updatedAt: new Date(row.updatedAt).toLocaleDateString(),\n    links: <LinkList url={row.url} homepageUrl={row.homepageUrl} />,\n  }));\n\nconst RepoPage = () => {\n  const [totalItems, setTotalItems] = useState(0);\n  const [firstRowIndex, setFirstRowIndex] = useState(0);\n  const [currentPageSize, setCurrentPageSize] = useState(10);\n\n  return (\n    <div className=\"bx--grid bx--grid--full-width bx--grid--no-gutter repo-page\">\n      <div className=\"bx--row repo-page__r1\">\n        <div className=\"bx--col-lg-16\">\n          <Query query={REPO_QUERY}>\n            {({ loading, error, data: { organization } }) => {\n              // Wait for the request to complete\n              if (loading)\n                return (\n                  <DataTableSkeleton\n                    columnCount={headers.length + 1}\n                    rowCount={10}\n                    headers={headers}\n                  />\n                );\n\n              // Something went wrong with the data fetching\n              if (error) return `Error! ${error.message}`;\n\n              // If we're here, we've got our data!\n              const { repositories } = organization;\n              setTotalItems(repositories.totalCount);\n              const rows = getRowItems(repositories.nodes);\n\n              return (\n                <>\n                  <RepoTable\n                    headers={headers}\n                    rows={rows.slice(\n                      firstRowIndex,\n                      firstRowIndex + currentPageSize\n                    )}\n                  />\n                  <Pagination\n                    totalItems={totalItems}\n                    backwardText=\"Previous page\"\n                    forwardText=\"Next page\"\n                    pageSize={currentPageSize}\n                    pageSizes={[5, 10, 15, 25]}\n                    itemsPerPageText=\"Items per page\"\n                    onChange={({ page, pageSize }) => {\n                      if (pageSize !== currentPageSize) {\n                        setCurrentPageSize(pageSize);\n                      }\n                      setFirstRowIndex(pageSize * (page - 1));\n                    }}\n                  />\n                </>\n              );\n            }}\n          </Query>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RepoPage;\n","import RepoPage from './RepoPage';\nexport default RepoPage;\n","import React, { Component } from 'react';\nimport './app.scss';\nimport { Content } from 'carbon-components-react/lib/components/UIShell';\nimport TutorialHeader from './components/TutorialHeader';\nimport { Route, Switch } from 'react-router-dom';\nimport LandingPage from './content/LandingPage';\nimport RepoPage from './content/RepoPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <TutorialHeader />\n        <Content>\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/repos\" component={RepoPage} />\n          </Switch>\n        </Content>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'core-js/modules/es7.array.includes';\nimport 'core-js/modules/es6.array.fill';\nimport 'core-js/modules/es6.string.includes';\nimport 'core-js/modules/es6.string.trim';\nimport 'core-js/modules/es7.object.values';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\nconst client = new ApolloClient({\n  uri: 'https://api.github.com/graphql',\n  headers: {\n    authorization: `Bearer ${process.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN}`,\n  },\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n      <App />\n    </Router>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}